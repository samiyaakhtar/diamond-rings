trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true
  clean: true

- bash: |
    echo "SourceBranchName = $(Build.SourceBranchName)"
    echo "SourceBranch = $(Build.SourceBranch)"
    branch_name_extracted=$(echo "${SourceBranch/refs\/head\// }")
  displayName: Extract branch name
  
# - bash: |
#     git clone https://github.com/samiyaakhtar/container-journey.git
#     cd container-journey/pipeline-scripts

#     sudo /usr/bin/easy_install virtualenv
#     pip install virtualenv 
#     pip install --upgrade pip
#     python -m virtualenv venv
#     source venv/bin/activate
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt

#     tag_name="hello-bedrock-$(Build.SourceBranchName)-$(Build.BuildId)"
#     commitId=$(Build.SourceVersion)
#     commitId=$(echo "${commitId:0:7}")
#     echo "python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId"
#     python update_pipeline.py $(ACCOUNT_NAME) $(ACCOUNT_KEY) $(TABLE_NAME) $(PARTITION_KEY) p1 $(Build.BuildId) imageTag $tag_name commitId $commitId 
#   displayName: Update source pipeline details in CJ db

- bash: |
    curl https://spektateprototypefunc.azurewebsites.net/api/UpdatePipelineStorage \
    --request POST \ 
    --data '{"account_key": $(ACCOUNT_KEY), "account_name": $(ACCOUNT_NAME), "table_name": $(TABLE_NAME), "partition_key": $(PARTITION_KEY), "filter_name": "p1", "filter_value": $(Build.BuildId), "name1": "imageTag", "value1": $tag_name, "name2": "commitId", "value2": $commitId }' \
    --header "Content-type: application/json" \

  displayName: Update source pipeline details in Spektate

- task: Docker@2
  inputs:
    containerRegistry: 'hellorings_acr'
    repository: 'hellobedrock'
    command: 'buildAndPush'
    Dockerfile: '**/src/Dockerfile'
    tags: 'hello-bedrock-$(Build.SourceBranchName)-$(Build.BuildId)'
  condition: ne(variables['Build.Reason'], 'PullRequest')
